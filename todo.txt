- general idea is to make a cross-platform, well documented, beautiful
looking music streamer in java that cuts through all the dead projects and outdated
sketchy music streamer.
- I want to show how beautiful a java music player can be
however im concerned about performance and readability.
- In a sense this should be the fullest "bare-bones" project.

        Here is a list of features or general things that need to be added.

    [] Basic gui window
    [] Draft of UI layout with buttons
    [] play sounds from different file formats ( *.mp3-4, .wav, etc.)
    [] create,delete playlists
    [] add, delete songs from the playlist
    [] create playlist from selected section from playlist.
    [] create playlist with similar genres from other playlist
    [] cool animations for gui widgets
    [] colorful and flashy animations when playing a song ( cause why not)
    [] database of music from third party?
    [] download music locally from third party database
    [] Buttons to skip song, go to last song, and play/pause
    [] make the project both a webpage and a desktop app
    [*] have a sign in page 
    [] manage signed up users 
    [] users can save the animations that are generated from the song?
    [] records animations and saves them???
    [] allow users to upload their own music 
    [] algorithms to check for copyright so people dont upload proprietary content
    [] each song has to be approved before being uploaded, only criteria is that 
    [] have homepage identical to desktop home page
    [] make webpage secure??? 
    [] add EULA agreement and let people upload their own music?
    [] use music from third party apps like soundcloud, youtube, spotify even if they have a system for that.
    [] rules against, racism, hate-speech etc.
    [] generate animations from live audio input??? like a microphone or midi or etc.


-   Misc.
    | these are some questions im going to try to answer during development 
        - Can i convert a javascript web app into a desktop app? if so, how can I acheive this.
        - could i use anime.js for the animations that go along with the music. Is this software open source?
            Answer: anime.js uses the MIT license, therefore it is safe to use for commerical purposesmake the project both a webpage and a desktop app
     - is there an audio visualizer library that can automatically generate the different styles of animation that i want?

==========================================================================================================
                                 | Development Journal |

- first idea is to take an open source javascript music player and combine it with anime.js to see if this is plausable
using open source options before deciding to make everything from scratch
- open source isnt gonna work, just gonna make it from scratch in order to learn more and customize more.. i think.
- the goal here is to have a basic music player that plays an animation along with it.

- after doing some research about soundcloud, it turns out that you cant make any money off of your music
 from thousands of listeners; if they come from a country where soundcloud cant advertise 
- maybe i could just use ai or something to genrate animations that look cool, just like a proof of concept.
- found out the animation i am looking to replicate is called an audio visualizer
- going to try to use vue.js as the web framework with an audio visualizer library called wave.js
- im thinking about how these kinds of libraries are made
- just thinking about making the app in pure go ol html/css/javascript to go back and learn the basics 
- or is this just a waste of time and i should use a framework??? 
- first attempt today at using node.js to make the login authentication system
	- npm init -y : gave me an initial project package.json file that even noticed the github repo link! neat!
	- npm i express bcrypt : installed brcrypt and other packages for the project?
	- npm i --save-dev nodemon : allows me to install a package only for dev so i dont have to restart the server manually
	- npm run startServer : starts the web app keep in mind that its running the name for nodemon in package.json which
	in this case is "startServer"
	- so i need to remember this little hitch i had so : lets say in '/public' i have all the folders css, js, and images.
	in order to load in these images i had to use :
		in server.js:
			app.use('/css',express.static(__dirname + '/public/css'))

		however in index.html to link it i used this :
 			
		    	<link rel="stylesheet" href="/css/main.css">

		Since the browser will read it as https://localhost:3000/css/main.css
		even though if i run it locally it wont work since it isnt using the local file system
    - when running this project on my main machine, i had to delete the node_modules folder cause npm couldent find 
    the packages bcrypt and nodemon, cause they already existed. so note for the future just delete the node_modules folder 
    before trying to install the dependencies and run the project.
    - going to use mysql node package for the user credentials to be stored in 
    - need to add the functionality for storing credentials in a mysql database(use cheatsheet)
    - watch video about using mysql databases in javascript
    